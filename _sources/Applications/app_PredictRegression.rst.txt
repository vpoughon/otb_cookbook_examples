.. _app-PredictRegression:

PredictRegression
=================


Performs a prediction of the input image according to a regression model file.

Description
-----------

This application predict output values from an input image, based on a regression model file produced by the :ref:`app-TrainRegression` application. Pixels of the output image will contain the predicted values fromthe regression model (single band). The input pixels can be optionally centered and reduced according to the statistics file produced by the :ref:`app-ComputeImagesStatistics` application. An optional input mask can be provided, in which case only input image pixels whose corresponding mask value is greater than 0 will be processed. The remaining of pixels will be given the value 0 in the output image.

Parameters
----------

.. contents:: :local:

.. |br| raw:: html

   <br />

.. |em| raw:: html

   &emsp;

**Input Image** :code:`-in image` *Mandatory* |br|
The input image to predict.

**Input Mask** :code:`-mask image` |br|
The mask allow restricting classification of the input image to the area where mask pixel values are greater than 0.

**Model file** :code:`-model filename [dtype]` *Mandatory* |br|
A regression model file (produced by TrainRegression application).

**Statistics file** :code:`-imstat filename [dtype]` |br|
A XML file containing mean and standard deviation to center and reduce samples before prediction (produced by ComputeImagesStatistics application). If this file containsone more band than the sample size, the last stat of last band will beapplied to expand the output predicted value

**Output Image** :code:`-out image [dtype]` *Mandatory* |br|
Output image containing predicted values

**Available RAM (MB)** :code:`-ram int` *Default value: 256* |br|
Available memory for processing (in MB).

**Load parameters from XML** :code:`-inxml filename.xml` |br|
Load application parameters from an XML file.

**Save parameters to XML** :code:`-outxml filename.xml` |br|
Save application parameters to an XML file.



Examples
--------

From the command-line:

.. code-block:: bash

    otbcli_PredictRegression -in QB_1_ortho.tif -imstat EstimateImageStatisticsQB1.xml -model clsvmModelQB1.svm -out clLabeledImageQB1.tif


From Python:

.. code-block:: python

	import otbApplication

	app = otbApplication.Registry.CreateApplication("PredictRegression")

	app.SetParameterString("in", "QB_1_ortho.tif")
	app.SetParameterString("imstat", "EstimateImageStatisticsQB1.xml")
	app.SetParameterString("model", "clsvmModelQB1.svm")
	app.SetParameterString("out", "clLabeledImageQB1.tif")

	app.ExecuteAndWriteOutput()



Limitations
-----------

The input image must contain the feature bands used for the model training (without the predicted value). If a statistics file was used during training by the TrainRegression, it is mandatory to use the same statistics file for prediction. If an input mask is used, its size must match the input image size.

See also
--------

| :ref:`app-TrainRegression`, :ref:`app-ComputeImagesStatistics`
